{"version":3,"sources":["components/ToDoInput.js","components/ToDoListItem.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoInput","toDo","setToDo","useState","inputValue","setInputValue","id","uuid","className","onChange","e","target","value","onKeyPress","key","handleKeypress","type","placeholder","onClick","size","icon","faPlus","ToDoListItem","toDoItem","taskStatus","setTaskStatus","getDateTime","currentdate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","dateTime","setDateTime","emojis","Math","floor","random","length","faRedo","faCheck","filter","i","faTrash","ToDoList","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAoCeA,EA/BG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAKC,iBAOX,OACE,sBAAKC,UAAU,kBAAf,UACE,uBACEC,SAAU,SAACC,GAAD,OAAOL,EAAcK,EAAEC,OAAOC,QACxCC,WAAY,SAACH,GAAD,OAVK,SAACA,GACR,UAAVA,EAAEI,MACJZ,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAAEa,IAAKR,EAAIM,MAAOR,MACpCC,EAAc,KAOOU,CAAeL,IAClCM,KAAK,OACLJ,MAAOR,EACPa,YAAY,eAEd,wBACEC,QAAS,WACPhB,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAAEa,IAAKR,EAAIM,MAAOR,MACpCC,EAAc,KAEhBG,UAAU,eALZ,SAOE,cAAC,IAAD,CAAiBW,KAAK,KAAKC,KAAMC,YCyC1BC,EAnEM,SAAC,GAAiC,IAA/BrB,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASqB,EAAe,EAAfA,SACrC,EAAoCpB,oBAAS,GAA7C,mBAAOqB,EAAP,KAAmBC,EAAnB,KAEMC,EAAc,WAClB,IAAMC,EAAc,IAAIC,KAcxB,OAZED,EAAYE,UACZ,KACCF,EAAYG,WAAa,GAC1B,IACAH,EAAYI,cACZ,IACAJ,EAAYK,WACZ,IACAL,EAAYM,aACZ,IACAN,EAAYO,cAKhB,EAAgC/B,mBAASuB,KAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KAEA,GAAuB,KAAnBb,EAASX,MAAc,CACzB,IAAMyB,EAAS,CACb,eACA,iCACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,gBAEFd,EAASX,MAAQyB,EAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOI,SAG5D,OACE,sBAAKjC,UAAS,yBAAoBgB,EAAa,YAAc,IAA7D,UACE,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SAA+Be,EAASX,QACxC,qBAAKJ,UAAU,YAAf,SAA4B2B,OAE9B,sBAAK3B,UAAU,WAAf,UACE,wBACEU,QAAS,WACPO,GAAeD,GACfY,EAAYV,MAHhB,SAME,cAAC,IAAD,CAAiBP,KAAK,KAAKC,KAAMI,EAAakB,IAASC,QAEzD,wBACEzB,QAAS,kBAAMhB,EAAQD,EAAK2C,QAAO,SAACC,GAAD,OAAOA,EAAE/B,MAAQS,EAAST,SAD/D,SAGE,cAAC,IAAD,CAAiBK,KAAK,KAAKC,KAAM0B,eC9C5BC,EAfE,SAAC,GAAuB,IAArB9C,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACxB,OACE,qBAAKM,UAAU,iBAAf,SACGP,EAAK+C,KAAI,SAACzB,GAAD,OACR,cAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTqB,SAAUA,GACLA,EAAST,WCUTmC,MAZf,WACE,MAAwB9C,mBAAS,IAAjC,mBAAOF,EAAP,KAAaC,EAAb,KAEA,OACE,sBAAKM,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,kBACA,cAAC,EAAD,CAAWP,KAAMA,EAAMC,QAASA,IAChC,cAAC,EAAD,CAAUD,KAAMA,EAAMC,QAASA,QCJtBgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c79a823b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ToDoInput = ({ toDo, setToDo }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const id = uuid();\r\n  const handleKeypress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      setToDo([...toDo, { key: id, value: inputValue }]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"input-container\">\r\n      <input\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n        onKeyPress={(e) => handleKeypress(e)}\r\n        type=\"text\"\r\n        value={inputValue}\r\n        placeholder=\"Enter Note\"\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          setToDo([...toDo, { key: id, value: inputValue }]);\r\n          setInputValue(\"\");\r\n        }}\r\n        className=\"input-button\"\r\n      >\r\n        <FontAwesomeIcon size=\"lg\" icon={faPlus} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoInput;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faTrash, faRedo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ToDoListItem = ({ toDo, setToDo, toDoItem }) => {\r\n  const [taskStatus, setTaskStatus] = useState(false);\r\n\r\n  const getDateTime = () => {\r\n    const currentdate = new Date();\r\n    const datetime =\r\n      currentdate.getDate() +\r\n      \"/\" +\r\n      (currentdate.getMonth() + 1) +\r\n      \"/\" +\r\n      currentdate.getFullYear() +\r\n      \" \" +\r\n      currentdate.getHours() +\r\n      \":\" +\r\n      currentdate.getMinutes() +\r\n      \":\" +\r\n      currentdate.getSeconds();\r\n\r\n    return datetime;\r\n  };\r\n\r\n  const [dateTime, setDateTime] = useState(getDateTime());\r\n\r\n  if (toDoItem.value === \"\") {\r\n    const emojis = [\r\n      \"😎\",\r\n      \"🤷‍♂️\",\r\n      \"💭\",\r\n      \"👀\",\r\n      \"😬\",\r\n      \"🙄\",\r\n      \"😯\",\r\n      \"❓\",\r\n      \"❔\",\r\n      \"😋\",\r\n      \"🤔\",\r\n      \"🤨\",\r\n      \"😉\",\r\n    ];\r\n    toDoItem.value = emojis[Math.floor(Math.random() * emojis.length)];\r\n  }\r\n\r\n  return (\r\n    <div className={`item-container ${taskStatus ? \"completed\" : \"\"}`}>\r\n      <div className=\"todo\">\r\n        <div className=\"todo-content\">{toDoItem.value}</div>\r\n        <div className=\"date-time\">{dateTime}</div>\r\n      </div>\r\n      <div className=\"todo-btn\">\r\n        <button\r\n          onClick={() => {\r\n            setTaskStatus(!taskStatus);\r\n            setDateTime(getDateTime());\r\n          }}\r\n        >\r\n          <FontAwesomeIcon size=\"lg\" icon={taskStatus ? faRedo : faCheck} />\r\n        </button>\r\n        <button\r\n          onClick={() => setToDo(toDo.filter((i) => i.key !== toDoItem.key))}\r\n        >\r\n          <FontAwesomeIcon size=\"lg\" icon={faTrash} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoListItem;\r\n","import React from \"react\";\r\nimport ToDoListItem from \"./ToDoListItem\";\r\n\r\nconst ToDoList = ({ toDo, setToDo }) => {\r\n  return (\r\n    <div className=\"list-container\">\r\n      {toDo.map((toDoItem) => (\r\n        <ToDoListItem\r\n          toDo={toDo}\r\n          setToDo={setToDo}\r\n          toDoItem={toDoItem}\r\n          key={toDoItem.key}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import React, { useState } from \"react\";\n\n// Importing Styles\nimport \"./styles/app.scss\";\n\n// Importing Components\nimport ToDoInput from \"./components/ToDoInput\";\nimport ToDoList from \"./components/ToDoList\";\n\nfunction App() {\n  const [toDo, setToDo] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-title\">TODO</div>\n      <ToDoInput toDo={toDo} setToDo={setToDo} />\n      <ToDoList toDo={toDo} setToDo={setToDo} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}